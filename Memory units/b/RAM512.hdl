// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    //RAM64 X8 select
	DMux8Way16(in=in,sel=address[0..2],a=RAM0,b=RAM1,c=RAM2,d=RAM3,e=RAM4,f=RAM5,g=RAM6,h=RAM7);
	DMux8Way(in=load,sel=address[0..2],a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);
	DMux8Way6(in=address[3..8],sel=address[0..2],a=a0,b=a1,c=a2,d=a3,e=a4,f=a5,g=a6,h=a7);
	RAM64(in=RAM0,load=l0,address=a0,out=o0);
	RAM64(in=RAM1,load=l1,address=a1,out=o1);
	RAM64(in=RAM2,load=l2,address=a2,out=o2);
	RAM64(in=RAM3,load=l3,address=a3,out=o3);
	RAM64(in=RAM4,load=l4,address=a4,out=o4);
	RAM64(in=RAM5,load=l5,address=a5,out=o5);
	RAM64(in=RAM6,load=l6,address=a6,out=o6);
	RAM64(in=RAM7,load=l7,address=a7,out=o7);
	Mux8Way16(a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,sel=address[0..2],out=out);
}